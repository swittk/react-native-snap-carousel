import { Animated, ScaleTransform, TranslateXTransform, TranslateYTransform } from 'react-native';
import type { CarouselProps } from '../carousel/Carousel';
export declare function getInputRangeFromIndexes(range: number[], index: number, carouselProps: CarouselProps<any>): number[];
export declare function defaultScrollInterpolator(index: number, carouselProps: CarouselProps<any>): {
    inputRange: number[];
    outputRange: number[];
};
export declare function defaultAnimatedStyles(index: number, animatedValue: Animated.Value, carouselProps: CarouselProps<any>): {
    backfaceVisibility?: Animated.Value | Animated.AnimatedInterpolation | "visible" | "hidden" | undefined;
    backgroundColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderBottomColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderBottomEndRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderBottomLeftRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderBottomRightRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderBottomStartRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderBottomWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderEndColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderLeftColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderLeftWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderRightColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderRightWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderStartColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderStyle?: Animated.Value | Animated.AnimatedInterpolation | "solid" | "dotted" | "dashed" | undefined;
    borderTopColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderTopEndRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderTopLeftRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderTopRightRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderTopStartRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderTopWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    opacity?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    testID?: string | Animated.Value | Animated.AnimatedInterpolation | undefined;
    elevation?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    alignContent?: "center" | Animated.Value | Animated.AnimatedInterpolation | "flex-start" | "flex-end" | "stretch" | "space-between" | "space-around" | undefined;
    alignItems?: "center" | Animated.Value | Animated.AnimatedInterpolation | "flex-start" | "flex-end" | "stretch" | "baseline" | undefined;
    alignSelf?: "center" | Animated.Value | Animated.AnimatedInterpolation | "flex-start" | "flex-end" | "stretch" | "baseline" | "auto" | undefined;
    aspectRatio?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderEndWidth?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderStartWidth?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    bottom?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    display?: Animated.Value | "flex" | Animated.AnimatedInterpolation | "none" | undefined;
    end?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flex?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flexBasis?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flexDirection?: Animated.Value | Animated.AnimatedInterpolation | "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    flexGrow?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flexShrink?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flexWrap?: Animated.Value | Animated.AnimatedInterpolation | "wrap" | "nowrap" | "wrap-reverse" | undefined;
    height?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    justifyContent?: "center" | Animated.Value | Animated.AnimatedInterpolation | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | undefined;
    left?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    margin?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginBottom?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginEnd?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginHorizontal?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginLeft?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginRight?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginStart?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginTop?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginVertical?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    maxHeight?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    maxWidth?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    minHeight?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    minWidth?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    overflow?: Animated.Value | Animated.AnimatedInterpolation | "visible" | "hidden" | "scroll" | undefined;
    padding?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingBottom?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingEnd?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingHorizontal?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingLeft?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingRight?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingStart?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingTop?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingVertical?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    position?: Animated.Value | Animated.AnimatedInterpolation | "absolute" | "relative" | undefined;
    right?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    start?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    top?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    width?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    zIndex?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    direction?: Animated.Value | Animated.AnimatedInterpolation | "inherit" | "ltr" | "rtl" | undefined;
    shadowColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    shadowOffset?: Animated.WithAnimatedObject<{
        width: number;
        height: number;
    }> | undefined;
    shadowOpacity?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    shadowRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    transform?: Animated.WithAnimatedArray<import("react-native").PerpectiveTransform | import("react-native").RotateTransform | import("react-native").RotateXTransform | import("react-native").RotateYTransform | import("react-native").RotateZTransform | ScaleTransform | import("react-native").ScaleXTransform | import("react-native").ScaleYTransform | TranslateXTransform | TranslateYTransform | import("react-native").SkewXTransform | import("react-native").SkewYTransform | import("react-native").MatrixTransform> | undefined;
    transformMatrix?: Animated.WithAnimatedArray<number> | undefined;
    rotation?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    scaleX?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    scaleY?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    translateX?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    translateY?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
};
export declare function shiftAnimatedStyles(index: number, animatedValue: Animated.Value, carouselProps: CarouselProps<any>): {
    transform: ({
        scale?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    } | {
        translateX: number | Animated.Value | Animated.AnimatedInterpolation;
    } | {
        translateY: number | Animated.Value | Animated.AnimatedInterpolation;
    })[];
    backfaceVisibility?: Animated.Value | Animated.AnimatedInterpolation | "visible" | "hidden" | undefined;
    backgroundColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderBottomColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderBottomEndRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderBottomLeftRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderBottomRightRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderBottomStartRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderBottomWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderEndColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderLeftColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderLeftWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderRightColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderRightWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderStartColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderStyle?: Animated.Value | Animated.AnimatedInterpolation | "solid" | "dotted" | "dashed" | undefined;
    borderTopColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    borderTopEndRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderTopLeftRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderTopRightRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderTopStartRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderTopWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderWidth?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    opacity?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    testID?: string | Animated.Value | Animated.AnimatedInterpolation | undefined;
    elevation?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    alignContent?: "center" | Animated.Value | Animated.AnimatedInterpolation | "flex-start" | "flex-end" | "stretch" | "space-between" | "space-around" | undefined;
    alignItems?: "center" | Animated.Value | Animated.AnimatedInterpolation | "flex-start" | "flex-end" | "stretch" | "baseline" | undefined;
    alignSelf?: "center" | Animated.Value | Animated.AnimatedInterpolation | "flex-start" | "flex-end" | "stretch" | "baseline" | "auto" | undefined;
    aspectRatio?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderEndWidth?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    borderStartWidth?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    bottom?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    display?: Animated.Value | "flex" | Animated.AnimatedInterpolation | "none" | undefined;
    end?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flex?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flexBasis?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flexDirection?: Animated.Value | Animated.AnimatedInterpolation | "row" | "column" | "row-reverse" | "column-reverse" | undefined;
    flexGrow?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flexShrink?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    flexWrap?: Animated.Value | Animated.AnimatedInterpolation | "wrap" | "nowrap" | "wrap-reverse" | undefined;
    height?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    justifyContent?: "center" | Animated.Value | Animated.AnimatedInterpolation | "flex-start" | "flex-end" | "space-between" | "space-around" | "space-evenly" | undefined;
    left?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    margin?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginBottom?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginEnd?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginHorizontal?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginLeft?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginRight?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginStart?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginTop?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    marginVertical?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    maxHeight?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    maxWidth?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    minHeight?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    minWidth?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    overflow?: Animated.Value | Animated.AnimatedInterpolation | "visible" | "hidden" | "scroll" | undefined;
    padding?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingBottom?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingEnd?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingHorizontal?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingLeft?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingRight?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingStart?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingTop?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    paddingVertical?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    position?: Animated.Value | Animated.AnimatedInterpolation | "absolute" | "relative" | undefined;
    right?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    start?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    top?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    width?: string | number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    zIndex?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    direction?: Animated.Value | Animated.AnimatedInterpolation | "inherit" | "ltr" | "rtl" | undefined;
    shadowColor?: string | Animated.Value | Animated.AnimatedInterpolation | import("react-native").OpaqueColorValue | undefined;
    shadowOffset?: Animated.WithAnimatedObject<{
        width: number;
        height: number;
    }> | undefined;
    shadowOpacity?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    shadowRadius?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    transformMatrix?: Animated.WithAnimatedArray<number> | undefined;
    rotation?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    scaleX?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    scaleY?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    translateX?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
    translateY?: number | Animated.Value | Animated.AnimatedInterpolation | undefined;
};
export declare function stackScrollInterpolator(index: number, carouselProps: CarouselProps<any>): {
    inputRange: number[];
    outputRange: number[];
};
export declare function stackAnimatedStyles(index: number, animatedValue: Animated.Value, carouselProps: CarouselProps<any>, cardOffset: number): {
    opacity: Animated.AnimatedInterpolation;
    transform: ({
        scale: Animated.AnimatedInterpolation;
    } | {
        [x: string]: Animated.AnimatedInterpolation;
        scale?: undefined;
    })[];
    zIndex?: undefined;
} | {
    zIndex: number;
    opacity: Animated.AnimatedInterpolation;
    transform: ({
        scale: Animated.AnimatedInterpolation;
    } | {
        [x: string]: Animated.AnimatedInterpolation;
        scale?: undefined;
    })[];
};
export declare function tinderScrollInterpolator(index: number, carouselProps: CarouselProps<any>): {
    inputRange: number[];
    outputRange: number[];
};
export declare function tinderAnimatedStyles(index: number, animatedValue: Animated.Value, carouselProps: CarouselProps<any>, cardOffset: number): {
    opacity: Animated.AnimatedInterpolation;
    transform: ({
        scale: Animated.AnimatedInterpolation;
        rotate?: undefined;
    } | {
        rotate: Animated.AnimatedInterpolation;
        scale?: undefined;
    } | {
        [x: string]: Animated.AnimatedInterpolation;
        scale?: undefined;
        rotate?: undefined;
    })[];
    zIndex?: undefined;
} | {
    zIndex: number;
    opacity: Animated.AnimatedInterpolation;
    transform: ({
        scale: Animated.AnimatedInterpolation;
        rotate?: undefined;
    } | {
        rotate: Animated.AnimatedInterpolation;
        scale?: undefined;
    } | {
        [x: string]: Animated.AnimatedInterpolation;
        scale?: undefined;
        rotate?: undefined;
    })[];
};
